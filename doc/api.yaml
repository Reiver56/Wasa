openapi: '3.0.3'
info:
  title: WASAphoto's APIs
  description: |-
    The following APIs are for Wasa's first Homework
  version: '0.0.1'

  
#patterns URL
#login:
paths:
  /login:
    post:
      tags:  
        - "login"
      summary: Logs in the user
      description: |-
        If the user does not exist, it will be created,
        and an identifier is returned.
        If the user exists, the user identifier is returned.
      operationId: doLogin
      requestBody:
        description: User details
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: Maria
                  pattern: '^[a-zA-Z0-9]+$'
                  minLength: 3
                  maxLength: 16
                password:
                  type: string
                  example: paperino05
                  pattern: '^.*?$'
                  minLength: 8
                  maxLength: 25

        required: true
      responses:
        '201':
          description: Login successfull
        '403':
          description: Login failed
        '500': 
          description: Unexpected condition encountered
  
  
#////////////////////////////////////////////////////////////////



#description of user 
  /user:
        
    get:
      tags: 
        - "research"
      summary: Get the profile of user of application if exist
      description: User can find other users in application if exist
      operationId: getUserProfile
      
      responses:
        '204' :
          description: The server processed the request successfully and will not return any content
        '401' :
          description: Unauthorized Access
        '403':
          description: The server understood the request but denies the authorization
        '404':
          description: Not Found Resource could not be found but may be available in the future
        '500':
          description: Unexpected condition encountered


      
      



  /users/{id}:

    parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/nickname"
      - $ref: "#/components/parameters/photocount"
      #da aggiungere il numero di follower dell'utente e numero di persone che segue
      #immagine di profilo

    get:
      tags: 
        - "users"
      summary: return information of profile
      description: The user obtain a profile's information
      operationId: getProfile

      responses:
        '200' :
          description: The server return all information of profile
        '404' :
          description: Not Found, user with such ID does not exist


    put:
      tags: 
        - "setuser"
      summary: Set UserName
      description: |-
        put a new user name or modify with a new username. It's a string between 3-16 characters

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nickname:
                  type: string
                  example: "Rapollo1211"
                  pattern: '^.*?$'
                  minLength: 3
                  maxLength: 16
        required: true

      responses:
        '204' :
          description: The server processed the request successfully and will not return any content
        '401' :
          description: Unauthorized Access
        '403':
          description: The server understood the request but denies the authorization
        '404':
          description: Not Found Resource could not be found but may be available in the future
        '500':
          description: Unexpected condition encountered


      
      



      

    
    
    

#uploading a photo in personal profile
  /users/{user-id}/media:
    parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/photocount"
    post:
      tags: 
       - "photos"
      summary: Uploading a photo
      description: The user can upload a photos in personal profile
      operationId: uploadPhoto
      requestBody:
        content:
          image/*:
            schema:
              description: "the content of photo"
              type: string
              format: binary
              example: "010010001001"
              minLength: 0
              maxLength: 100
        required: true
      responses:
        '200':
          description: The image uploaded correctly
        '403':
          description: The server understood the request but denies the authorization
        '404':
          description: Not Found Resource could not be found but may be available in the future
        
  /users/{user-id}/media/{photo_id}:
    parameters:
      - $ref: "#/components/parameters/id"
      - name: photo_id
        in: path
        required: true
        description: identification string of the photo, it's unique
        schema: 
          description: unique string id
          type: string
          minLength: 0
          maxLength: 999 
          example: "Av89Op0"
          readOnly: true
    delete:
      tags:
        - "photos"
      summary: Delete a photo from personal profile
      description: Delete photo
      operationId: deletePhoto

      responses:
        '200':
          description: The image deleted correctly
        '403':
          description: The server understood the request but denies the authorization
        '404':
          description: Not Found Resource could not be found but may be available in the future

  /users/{user-id}/media/{photo_id}/comments:
    parameters:
      - $ref: "#/components/parameters/id"
      - name: photo_id
        in: path
        required: true
        description: identification string of the photo, it's unique
        schema: 
          description: unique string id
          type: string
          minLength: 0
          maxLength: 999 
          example: "Av89Op0"
          readOnly: true
    post:
      tags: 
        - "comment"
      summary: user can comment photo
      description: add a new commment in photo
      operationId: commentPhoto

      requestBody:
        description: id of user and relative comment
        content:
          application/json:
            schema:
              description: information of user that comment a photo
              type: object
              properties:
                user_id:
                  $ref: "#/components/parameters/id"
                nickname:
                  $ref: "#/components/parameters/nickname"   
                comment: 
                  type: string
                  minLength: 1
                  maxLength: 250
                  pattern: '^.*?$'
                  example: nice photo
                  description: comment
      responses:
        '200':
          description: The comment is insert correctly
        '403':
          description: The server understood the request but denies the authorization
        '404':
          description: Not Found Resource could not be found but may be available in the future
        

                   


          
      

        



#____________________________________________________________________________________________________
#components:
components:

  parameters:

    id:
      name: id
      in: path
      description: unique id of user
      required: true
      schema:
        description: string between 3-16 characters
        type: string
        pattern: '^.*?$'
        example: Momo121
        minLength: 3
        maxLength: 16
        readOnly: true

  #it's a nickname that appears when we open a profile
    nickname:
      name: nickname
      in: query
      description: user's nickname
      required: true
      schema:
        description: string between 3-16 characters
        type: string
        pattern: '^.*?$'
        example: _Luca129_
        minLength: 3
        maxLength: 16
        readOnly: true
  #it's a counter of photos 
    photocount:
      name: photocount
      in: query
      description: it's a counter of photos in user's profile
      required: true
      schema:
        description: counter of photos
        type: integer
        minimum: 0
        maximum: 99999
        readOnly: true
    c_id:
      name: comment identifier
      in: query
      description: gives a comment an identification code that allows you to do more operations
      
      schema:

        description: comment id
        type: string
        minLength: 3
        maxLength: 16
        readOnly: true




      
      










  
  
        

              
   

      



  
    

